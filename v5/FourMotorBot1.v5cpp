{"mode":"Text","hardwareTarget":"brain","textContent":"#pragma region VEXcode Generated Robot Configuration\n// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START V5 MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END V5 MACROS\n\n\n// Robot configuration code.\nmotor frontRightMotor = motor(PORT2, ratio18_1, false);\n\nmotor frontLeftMotor = motor(PORT9, ratio18_1, false);\n\nmotor backLeftMotor = motor(PORT1, ratio18_1, false);\n\nmotor backRightMotor = motor(PORT10, ratio18_1, false);\n\n\n\n// generating and setting random seed\nvoid initializeRandomSeed(){\n  int systemTime = Brain.Timer.systemHighResolution();\n  double batteryCurrent = Brain.Battery.current();\n  double batteryVoltage = Brain.Battery.voltage(voltageUnits::mV);\n\n  // Combine these values into a single integer\n  int seed = int(batteryVoltage + batteryCurrent * 100) + systemTime;\n\n  // Set the seed\n  srand(seed);\n}\n\n\n\nvoid vexcodeInit() {\n\n  //Initializing random seed.\n  initializeRandomSeed(); \n}\n\n\n// Helper to make playing sounds from the V5 in VEXcode easier and\n// keeps the code cleaner by making it clear what is happening.\nvoid playVexcodeSound(const char *soundName) {\n  printf(\"VEXPlaySound:%s\\n\", soundName);\n  wait(5, msec);\n}\n\n#pragma endregion VEXcode Generated Robot Configuration\n\n\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n#include <vector>\n\n\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Include the V5 Library\n#include \"vex.h\"\n  \n#define INCH2METERS 25.4/1000.0 \n\nusing namespace vex;\n\nstruct MotorGroup {\n  //have a vector to hold a list of motors in the group\n\n  void addMotor(motor m){\n    motors.push_back(m);\n  }\n  void setSpeed(double x){\n    for(motor m: motors){\n      m.setVelocity(x, percent);\n    }\n  }\n  void resetMeters(){\n    for(motor m: motors){\n      m.setPosition(0, turns);\n    }\n  }\n\n  double getRotations() {\n  }   \n\n  void drive(){\n  }\n\n  void stopMotors() {\n    for(motor m: motors){\n      m.setStopping(brake);\n      m.stop();\n    }\n  }\n};\n\nclass MyDriveTrain {\npublic:  \n  double WheelDiameter = 4 * INCH2METERS; \n  double TrackWidth = 14.5 * INCH2METERS;\n\n  void setup(){\n    rightMotorGroup.addMotor(frontRightMotor);\n    rightMotorGroup.addMotor(backRightMotor);\n    leftMotorGroup.addMotor(backLeftMotor);\n    leftMotorGroup.addMotor(frontLeftMotor);\n  }\n\n  void setVelocity(double x){\n    rightMotorGroup.setSpeed(x);\n    leftMotorGroup.setSpeed(x);\n  }\n\n  void driveForMeters(double x){\n  }\n\nprivate:\n  MotorGroup rightMotorGroup;\n  MotorGroup leftMotorGroup;\n};\n\n// Wheel Size: 4 inches \n// Track Width: 14.5 in\n// Wheelbase: 6.5 in\nint main() {\n  vexcodeInit();\n  MyDriveTrain driveTrain;\n  driveTrain.setup();\n  driveTrain.setVelocity(0.25);\n  driveTrain.driveForMeters(4.2);\n}\n","textLanguage":"cpp","robotConfig":[{"port":[2],"name":"frontRightMotor","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1"}},{"port":[9],"name":"frontLeftMotor","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1"}},{"port":[1],"name":"backLeftMotor","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1"}},{"port":[10],"name":"backRightMotor","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1"}}],"slot":0,"platform":"V5","sdkVersion":"20240802.15.00.00","appVersion":"4.0.12","fileFormat":"2.0.0","targetBrainGen":"First","v5Sounds":[{"name":"game over","url":"static/sounds/mixkit-arcade-retro-game-over-213.wav"}],"v5SoundsEnabled":false}